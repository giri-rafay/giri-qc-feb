apiVersion: v1
kind: Service
metadata:
  labels:
    rep-container: m11yjwm-redi
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: m11yjwm
  name: redi
  namespace: feb291
spec:
  ports:
  - name: port-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    rep-app: redi
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    rafay.dev/registry-knl9ll2: system-default-registry
  labels:
    rep-app: redi
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-workload: m11yjwm
  name: redi
  namespace: feb291
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      rep-app: redi
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        rep-app: redi
        rep-organization: 7w2lnkp
        rep-partner: rx28oml
        rep-workload: m11yjwm
    spec:
      containers:
      - args: []
        command: []
        env: []
        envFrom: []
        image: index.docker.io/redis:latest
        imagePullPolicy: IfNotPresent
        name: redi
        ports:
        - containerPort: 80
          name: port-80-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
          requests:
            cpu: 237m
            memory: 972Mi
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations: []

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: m11yjwm
  name: redi
  namespace: feb291
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redi
